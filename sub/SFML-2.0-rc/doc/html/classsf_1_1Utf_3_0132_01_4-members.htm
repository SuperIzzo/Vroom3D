<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.7.4 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><b>sf</b>      </li>
      <li class="navelem"><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">Utf&lt; 32 &gt;</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">sf::Utf&lt; 32 &gt; Member List</div>  </div>
</div>
<div class="contents">
This is the complete list of members for <a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a>, including all inherited members.<table>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#ac57503316089dc16a52be835b9bad32f">count</a>(In begin, In end)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a5d0416a12d8839e09a32f990baa7867e">decode</a>(In begin, In end, Uint32 &amp;output, Uint32 replacement=0)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a7df5ec90577bf2ae28c41a9b05a9dcba">decodeAnsi</a>(In input, const std::locale &amp;locale=std::locale())</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a814ba4d687716ab33a49ddc24489ed03">decodeWide</a>(In input)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#abc63307c2d872679f50a697dc32b810f">encode</a>(Uint32 input, Out output, Uint32 replacement=0)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#ae274c5057c343ba353253bd2c531a283">encodeAnsi</a>(Uint32 codepoint, Out output, char replacement=0, const std::locale &amp;locale=std::locale())</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a12b65aa82e36e6b81812c7ccf6e9faf1">encodeWide</a>(Uint32 codepoint, Out output, wchar_t replacement=0)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#af228da61a61de57361fdda1d633ea2b9">fromAnsi</a>(In begin, In end, Out output, const std::locale &amp;locale=std::locale())</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a66fa9221062e57c0ca4ebb640ea7c2c1">fromLatin1</a>(In begin, In end, Out output)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a4cbae8c7a80cbe347f21a559acfbc606">fromWide</a>(In begin, In end, Out output)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#ac2612aac4c588d4759206a252c8f36d9">next</a>(In begin, In end)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#aa199119337c048cbbb638dafb14ca5fd">toAnsi</a>(In begin, In end, Out output, char replacement=0, const std::locale &amp;locale=std::locale())</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#abe582973966ef8b1d0870c18931343e8">toLatin1</a>(In begin, In end, Out output, char replacement=0)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#ae15acc68735f15aecdcfc49fd09c9f1c">toUtf16</a>(In begin, In end, Out output)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#aa441b9756cebad0e045332d022f286c3">toUtf32</a>(In begin, In end, Out output)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a9e5ab717ba3fb132edd60e22c5ac02b3">toUtf8</a>(In begin, In end, Out output)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#ac646ef46f5a3277c8c82397bf1ec395c">toWide</a>(In begin, In end, Out output, wchar_t replacement=0)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
</table></div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
