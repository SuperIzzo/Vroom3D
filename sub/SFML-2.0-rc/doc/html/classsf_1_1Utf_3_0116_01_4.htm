<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.7.4 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><b>sf</b>      </li>
      <li class="navelem"><a class="el" href="classsf_1_1Utf_3_0116_01_4.htm">Utf&lt; 16 &gt;</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">sf::Utf&lt; 16 &gt; Class Template Reference</div>  </div>
</div>
<div class="contents">
<!-- doxytag: class="sf::Utf&lt; 16 &gt;" -->
<p>Specialization of the <a class="el" href="classsf_1_1Utf.htm" title="Utility class providing generic functions for UTF conversions.">Utf</a> template for UTF-16.  
 <a href="classsf_1_1Utf_3_0116_01_4.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="Utf_8hpp_source.htm">Utf.hpp</a>&gt;</code></p>

<p><a href="classsf_1_1Utf_3_0116_01_4-members.htm">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename In &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">static In&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf_3_0116_01_4.htm#a759915b18e2022b9f91e07a63d6bb561">decode</a> (In begin, In end, Uint32 &amp;output, Uint32 replacement=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Decode a single UTF-16 character.  <a href="#a759915b18e2022b9f91e07a63d6bb561"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename Out &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf_3_0116_01_4.htm#a69a63e861a0b387d6dd438c9b81bd83c">encode</a> (Uint32 input, Out output, Uint16 replacement=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Encode a single UTF-16 character.  <a href="#a69a63e861a0b387d6dd438c9b81bd83c"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename In &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">static In&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf_3_0116_01_4.htm#ab8c0deb3f1126c9e728e5dbd5ca96673">next</a> (In begin, In end)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Advance to the next UTF-16 character.  <a href="#ab8c0deb3f1126c9e728e5dbd5ca96673"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename In &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">static std::size_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf_3_0116_01_4.htm#a8a999396e691c97dd1bd5576471327bc">count</a> (In begin, In end)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Count the number of characters of a UTF-16 sequence.  <a href="#a8a999396e691c97dd1bd5576471327bc"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf_3_0116_01_4.htm#a8fdd9d5436c4ae71d325f92b6af42ce2">fromAnsi</a> (In begin, In end, Out output, const std::locale &amp;locale=std::locale())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert an ANSI characters range to UTF-16.  <a href="#a8fdd9d5436c4ae71d325f92b6af42ce2"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf_3_0116_01_4.htm#ae3701b025a759bfb611b04d4daeb2950">fromWide</a> (In begin, In end, Out output)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a wide characters range to UTF-16.  <a href="#ae3701b025a759bfb611b04d4daeb2950"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf_3_0116_01_4.htm#a36c87bba8e60882b68ea0f228ddd59e9">fromLatin1</a> (In begin, In end, Out output)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a latin-1 (ISO-5589-1) characters range to UTF-16.  <a href="#a36c87bba8e60882b68ea0f228ddd59e9"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf_3_0116_01_4.htm#a3f368cff7e369fa95b49a12214981b63">toAnsi</a> (In begin, In end, Out output, char replacement=0, const std::locale &amp;locale=std::locale())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert an UTF-16 characters range to ANSI characters.  <a href="#a3f368cff7e369fa95b49a12214981b63"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf_3_0116_01_4.htm#a3458bc10a0cc6e89e6f3d87540ee6434">toWide</a> (In begin, In end, Out output, wchar_t replacement=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert an UTF-16 characters range to wide characters.  <a href="#a3458bc10a0cc6e89e6f3d87540ee6434"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf_3_0116_01_4.htm#ad05ef5b152e091e93d2f00445238fc8f">toLatin1</a> (In begin, In end, Out output, char replacement=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert an UTF-16 characters range to latin-1 (ISO-5589-1) characters.  <a href="#ad05ef5b152e091e93d2f00445238fc8f"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf_3_0116_01_4.htm#a8b03a29de6398c6024c1477d86c8ab2b">toUtf8</a> (In begin, In end, Out output)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a UTF-16 characters range to UTF-8.  <a href="#a8b03a29de6398c6024c1477d86c8ab2b"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf_3_0116_01_4.htm#aa47751b281aa56ec636d6aa852b0ec5e">toUtf16</a> (In begin, In end, Out output)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a UTF-16 characters range to UTF-16.  <a href="#aa47751b281aa56ec636d6aa852b0ec5e"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename In , typename Out &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">static Out&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf_3_0116_01_4.htm#a43818ced5b57614280d428e8fd3d4445">toUtf32</a> (In begin, In end, Out output)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a UTF-16 characters range to UTF-32.  <a href="#a43818ced5b57614280d428e8fd3d4445"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><h3>template&lt;&gt;<br/>
class sf::Utf&lt; 16 &gt;</h3>

<p>Specialization of the <a class="el" href="classsf_1_1Utf.htm" title="Utility class providing generic functions for UTF conversions.">Utf</a> template for UTF-16. </p>

<p>Definition at line <a class="el" href="Utf_8hpp_source.htm#l00255">255</a> of file <a class="el" href="Utf_8hpp_source.htm">Utf.hpp</a>.</p>
</div><hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a8a999396e691c97dd1bd5576471327bc"></a><!-- doxytag: member="sf::Utf&lt; 16 &gt;::count" ref="a8a999396e691c97dd1bd5576471327bc" args="(In begin, In end)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">static std::size_t <a class="el" href="classsf_1_1Utf.htm">sf::Utf</a>&lt; 16 &gt;::count </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Count the number of characters of a UTF-16 sequence. </p>
<p>This function is necessary for multi-elements encodings, as a single character may use more than 1 storage element, thus the total size can be different from (begin - end).</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Iterator pointing to one past the last read element of the input sequence </dd></dl>

</div>
</div>
<a class="anchor" id="a759915b18e2022b9f91e07a63d6bb561"></a><!-- doxytag: member="sf::Utf&lt; 16 &gt;::decode" ref="a759915b18e2022b9f91e07a63d6bb561" args="(In begin, In end, Uint32 &amp;output, Uint32 replacement=0)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">static In <a class="el" href="classsf_1_1Utf.htm">sf::Utf</a>&lt; 16 &gt;::decode </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Uint32 &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Uint32&#160;</td>
          <td class="paramname"><em>replacement</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Decode a single UTF-16 character. </p>
<p>Decoding a character means finding its unique 32-bits code (called the codepoint) in the Unicode standard.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Codepoint of the decoded UTF-16 character </td></tr>
    <tr><td class="paramname">replacement</td><td>Replacement character to use in case the UTF-8 sequence is invalid</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Iterator pointing to one past the last read element of the input sequence </dd></dl>

</div>
</div>
<a class="anchor" id="a69a63e861a0b387d6dd438c9b81bd83c"></a><!-- doxytag: member="sf::Utf&lt; 16 &gt;::encode" ref="a69a63e861a0b387d6dd438c9b81bd83c" args="(Uint32 input, Out output, Uint16 replacement=0)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Out &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classsf_1_1Utf.htm">sf::Utf</a>&lt; 16 &gt;::encode </td>
          <td>(</td>
          <td class="paramtype">Uint32&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Uint16&#160;</td>
          <td class="paramname"><em>replacement</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Encode a single UTF-16 character. </p>
<p>Encoding a character means converting a unique 32-bits code (called the codepoint) in the target encoding, UTF-16.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">input</td><td>Codepoint to encode as UTF-16 </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence </td></tr>
    <tr><td class="paramname">replacement</td><td>Replacement for characters not convertible to UTF-16 (use 0 to skip them)</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="a8fdd9d5436c4ae71d325f92b6af42ce2"></a><!-- doxytag: member="sf::Utf&lt; 16 &gt;::fromAnsi" ref="a8fdd9d5436c4ae71d325f92b6af42ce2" args="(In begin, In end, Out output, const std::locale &amp;locale=std::locale())" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classsf_1_1Utf.htm">sf::Utf</a>&lt; 16 &gt;::fromAnsi </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;&#160;</td>
          <td class="paramname"><em>locale</em> = <code>std::locale()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Convert an ANSI characters range to UTF-16. </p>
<p>The current global locale will be used by default, unless you pass a custom one in the <em>locale</em> parameter.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence </td></tr>
    <tr><td class="paramname">locale</td><td>Locale to use for conversion</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="a36c87bba8e60882b68ea0f228ddd59e9"></a><!-- doxytag: member="sf::Utf&lt; 16 &gt;::fromLatin1" ref="a36c87bba8e60882b68ea0f228ddd59e9" args="(In begin, In end, Out output)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classsf_1_1Utf.htm">sf::Utf</a>&lt; 16 &gt;::fromLatin1 </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Convert a latin-1 (ISO-5589-1) characters range to UTF-16. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="ae3701b025a759bfb611b04d4daeb2950"></a><!-- doxytag: member="sf::Utf&lt; 16 &gt;::fromWide" ref="ae3701b025a759bfb611b04d4daeb2950" args="(In begin, In end, Out output)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classsf_1_1Utf.htm">sf::Utf</a>&lt; 16 &gt;::fromWide </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Convert a wide characters range to UTF-16. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="ab8c0deb3f1126c9e728e5dbd5ca96673"></a><!-- doxytag: member="sf::Utf&lt; 16 &gt;::next" ref="ab8c0deb3f1126c9e728e5dbd5ca96673" args="(In begin, In end)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">static In <a class="el" href="classsf_1_1Utf.htm">sf::Utf</a>&lt; 16 &gt;::next </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Advance to the next UTF-16 character. </p>
<p>This function is necessary for multi-elements encodings, as a single character may use more than 1 storage element.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Iterator pointing to one past the last read element of the input sequence </dd></dl>

</div>
</div>
<a class="anchor" id="a3f368cff7e369fa95b49a12214981b63"></a><!-- doxytag: member="sf::Utf&lt; 16 &gt;::toAnsi" ref="a3f368cff7e369fa95b49a12214981b63" args="(In begin, In end, Out output, char replacement=0, const std::locale &amp;locale=std::locale())" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classsf_1_1Utf.htm">sf::Utf</a>&lt; 16 &gt;::toAnsi </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>replacement</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::locale &amp;&#160;</td>
          <td class="paramname"><em>locale</em> = <code>std::locale()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Convert an UTF-16 characters range to ANSI characters. </p>
<p>The current global locale will be used by default, unless you pass a custom one in the <em>locale</em> parameter.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence </td></tr>
    <tr><td class="paramname">replacement</td><td>Replacement for characters not convertible to ANSI (use 0 to skip them) </td></tr>
    <tr><td class="paramname">locale</td><td>Locale to use for conversion</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="ad05ef5b152e091e93d2f00445238fc8f"></a><!-- doxytag: member="sf::Utf&lt; 16 &gt;::toLatin1" ref="ad05ef5b152e091e93d2f00445238fc8f" args="(In begin, In end, Out output, char replacement=0)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classsf_1_1Utf.htm">sf::Utf</a>&lt; 16 &gt;::toLatin1 </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>replacement</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Convert an UTF-16 characters range to latin-1 (ISO-5589-1) characters. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence </td></tr>
    <tr><td class="paramname">replacement</td><td>Replacement for characters not convertible to wide (use 0 to skip them)</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="aa47751b281aa56ec636d6aa852b0ec5e"></a><!-- doxytag: member="sf::Utf&lt; 16 &gt;::toUtf16" ref="aa47751b281aa56ec636d6aa852b0ec5e" args="(In begin, In end, Out output)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classsf_1_1Utf.htm">sf::Utf</a>&lt; 16 &gt;::toUtf16 </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Convert a UTF-16 characters range to UTF-16. </p>
<p>This functions does nothing more than a direct copy; it is defined only to provide the same interface as other specializations of the sf::Utf&lt;&gt; template, and allow generic code to be written on top of it.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="a43818ced5b57614280d428e8fd3d4445"></a><!-- doxytag: member="sf::Utf&lt; 16 &gt;::toUtf32" ref="a43818ced5b57614280d428e8fd3d4445" args="(In begin, In end, Out output)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classsf_1_1Utf.htm">sf::Utf</a>&lt; 16 &gt;::toUtf32 </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Convert a UTF-16 characters range to UTF-32. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="a8b03a29de6398c6024c1477d86c8ab2b"></a><!-- doxytag: member="sf::Utf&lt; 16 &gt;::toUtf8" ref="a8b03a29de6398c6024c1477d86c8ab2b" args="(In begin, In end, Out output)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classsf_1_1Utf.htm">sf::Utf</a>&lt; 16 &gt;::toUtf8 </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Convert a UTF-16 characters range to UTF-8. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<a class="anchor" id="a3458bc10a0cc6e89e6f3d87540ee6434"></a><!-- doxytag: member="sf::Utf&lt; 16 &gt;::toWide" ref="a3458bc10a0cc6e89e6f3d87540ee6434" args="(In begin, In end, Out output, wchar_t replacement=0)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename In , typename Out &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">static Out <a class="el" href="classsf_1_1Utf.htm">sf::Utf</a>&lt; 16 &gt;::toWide </td>
          <td>(</td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">In&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Out&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t&#160;</td>
          <td class="paramname"><em>replacement</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Convert an UTF-16 characters range to wide characters. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>Iterator pointing to the beginning of the input sequence </td></tr>
    <tr><td class="paramname">end</td><td>Iterator pointing to the end of the input sequence </td></tr>
    <tr><td class="paramname">output</td><td>Iterator pointing to the beginning of the output sequence </td></tr>
    <tr><td class="paramname">replacement</td><td>Replacement for characters not convertible to wide (use 0 to skip them)</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Iterator to the end of the output sequence which has been written </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Utf_8hpp_source.htm">Utf.hpp</a></li>
</ul>
</div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
